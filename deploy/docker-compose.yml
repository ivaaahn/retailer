version: "3"


services:
  web:
    container_name: web
    image: nginx:alpine
    depends_on:
     - app
     - admin
    ports:
      - "80:80"
      - "443:443"
    environment:
      S3_STORAGE_URL: $S3_STORAGE_URL
      S3_BUCKET_NAME: $S3_BUCKET_NAME
      S3_SECRET_USER_AGENT_HEADER: $S3_SECRET_USER_AGENT_HEADER
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/data/log:/data/log/
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: unless-stopped

#  certbot:
#    image: certbot/certbot
#    volumes:
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot

  app:
    image: ivaaahn/retailer:${RETAILER_VERSION}
    container_name: app
    environment:
      WAIT_HOSTS: pg:5432, redis:6379, rabbit:5672
    ports:
      - "8080:8080"
    depends_on:
      - pg
      - rabbit
      - redis
    restart: unless-stopped

  admin:
    image: ivaaahn/retailer-admin:${RETAILER_ADMIN_VERSION}
    container_name: admin
    environment:
      DJANGO_SUPERUSER_PASSWORD: $SU_PSWD
      DJANGO_SUPERUSER_EMAIL: $SU_EMAIL
      WAIT_HOSTS: pg:5432, redis:6379, rabbit:5672
    ports:
      - "8000:8000"
    depends_on:
      - pg
      - app
      - redis
    #For example, if you want to edit the source code in real time`volumes`Convenient to mount with
    # volumes:
    #   - ./app/app:/app/app
    #of the app container`CMD`To overwrite`command`use
    # command: "uvicorn app.main:app --reload --host 0.0.0.0"
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    expose:
      - 6379
    volumes:
      - redis_data_volume:/var/lib/redis
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped

  pymailer:
    image: ivaaahn/pymailer:${PYMAILER_VERSION}
    container_name: pymailer
    depends_on:
      - rabbit
    restart: unless-stopped

  pg:
    image: postgres:alpine
    container_name: pg
    expose:
      - 5432
    environment:
      POSTGRES_DB: $PG_DB
      POSTGRES_USER: $PG_USER
      POSTGRES_PASSWORD: $PG_PSWD
      DEFAULT_USER: $PG_DEFAULT_USER
      DEFAULT_PSWD: $PG_DEFAULT_PSWD
      ADMIN_USER: $PG_ADMIN_USER
      ADMIN_PSWD: $PG_ADMIN_PSWD
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./pg/scripts:/docker-entrypoint-initdb.d
      - ./pg/data/:/var/lib/postgresql/data
    restart: unless-stopped

  rabbit:
    image: ivaaahn/rabbitmq:${RABBITMQ_VERSION}
    container_name: retailer-rmq
    expose:
      - 5672
      - 15672
    volumes:
      - rabbit_data_volume:/data/lib/rabbitmq/
      - rabbit_logs_volume:/data/log/rabbitmq/
    restart: unless-stopped

volumes:
  redis_data_volume:
  rabbit_data_volume:
  rabbit_logs_volume: